steps:
  - name: gcr.io/cloud-builders/docker
    entrypoint: bash
    args:
      - -lc
      - |
        echo "Running comprehensive tests via docker compose" && \
        docker compose -f docker-compose.ci.yml up --abort-on-container-exit --exit-code-from test-runner
    id: Test
    secretEnv:
      - SECRETENV_BUNDLE
      - SECRETENV_KEY
  - name: gcr.io/cloud-builders/docker
    entrypoint: bash
    args:
      - -lc
      - |
        docker compose -f docker-compose.ci.yml down -v
    id: Test-Cleanup
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--no-cache'
      - '--build-arg'
      - SECRETENV_BUNDLE
      - '--build-arg'
      - SECRETENV_KEY
      - '-t'
      - >-
        $_AR_HOSTNAME/$PROJECT_ID/containers/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - '-t'
      - >-
        $_AR_HOSTNAME/$PROJECT_ID/containers/$REPO_NAME/$_SERVICE_NAME:feature
      - .
      - '-f'
      - Dockerfile
    id: Build
    secretEnv:
      - SECRETENV_BUNDLE
      - SECRETENV_KEY
  - name: gcr.io/cloud-builders/docker
    id: Tag-branch
    entrypoint: bash
    env:
      - BRANCH_NAME=$BRANCH_NAME
    args:
      - -lc
      - |
        SAFE_TAG=$(echo "$BRANCH_NAME" | tr '/' '-') && \
        echo "Tagging image with branch name: $$SAFE_TAG" && \
        docker tag \
          $_AR_HOSTNAME/$PROJECT_ID/containers/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA \
          $_AR_HOSTNAME/$PROJECT_ID/containers/$REPO_NAME/$_SERVICE_NAME:$$SAFE_TAG
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '--all-tags'
      - >-
        $_AR_HOSTNAME/$PROJECT_ID/containers/$REPO_NAME/$_SERVICE_NAME
    id: Push
images:
  - >-
    $_AR_HOSTNAME/$PROJECT_ID/containers/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
options:
  substitutionOption: ALLOW_LOOSE
  automapSubstitutions: true
  logging: CLOUD_LOGGING_ONLY
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/SECRETENV_DEV_BUNDLE/versions/latest
      env: SECRETENV_BUNDLE
    - versionName: projects/$PROJECT_ID/secrets/SECRETENV_DEV_KEY/versions/latest
      env: SECRETENV_KEY


